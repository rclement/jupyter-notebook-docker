name: Jupyter Notebook Docker CI CD

on: [push]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8.6"
      - name: Cache Python modules
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv
          pipenv install --dev --deploy
      - name: Check environment
        run: pipenv check

  build-docker:
    name: Docker build
    runs-on: ubuntu-latest
    needs: test
    if: contains(github.ref, 'master') || contains(github.ref, 'tags')

    env:
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/jupyter-notebook
      IMAGE_TAG: latest

    steps:
      - uses: actions/checkout@v2
      - name: Select Docker image tag (production only)
        if: contains(github.ref, 'tags')
        run: echo "::set-env name=IMAGE_TAG::${GITHUB_REF##*/}"
      - name: Log into Docker Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Pull latest Docker image
        run: docker pull $IMAGE_NAME:latest || true
      - name: Build Docker image (${{ env.IMAGE_TAG }})
        run: docker build -t $IMAGE_NAME:$IMAGE_TAG --cache-from $IMAGE_NAME:latest .
      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:$IMAGE_TAG
